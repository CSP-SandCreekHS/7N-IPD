--------------------------------------------------------------------------------
Section 0 - Line up
--------------------------------------------------------------------------------
Player 0 (P0): Tofu Cracker, winning strategy
        the algorithms wait for the opponent to do a certain pattern and when th
        e opponent does that pattern, our algorith sends out a certain decided r
        esponse. The other one sends out a certain pattern once the score of eit
        her the opponent or you gets to a certain point.
Player 1 (P1): CatsdaBest, Collude more than Betray
        Collude 70% of the time and betray 30% of the time, only after the other
         person betrays
Player 2 (P2): Team Sam and Josiah, Majority Decide
        Colludes or Betrays depending on what opponent has done more
Player 3 (P3): Hungary, Random chaos
        Weighs the options, then picks something randomly
Player 4 (P4): The name the team gives to itself, The name the team gives to this strategy
        How does this strategy decide?
Player 5 (P5):  BubbleGuppies, The name the team gives to this strategy
        How does this strategy decide?
Player 6 (P6): team buttkicker,  alternate strategy
        the c and b will alternate based off of the history.
Player 7 (P7): Fish Friends, If our score is greater, betray however if their history is ccc return c
        How does this strategy decide?
Player 8 (P8): ace of spades, The name the team gives to this strategy
        How does this strategy decide?
--------------------------------------------------------------------------------
Section 1 - Player vs. Player
--------------------------------------------------------------------------------
Each column shows pts/round earned against each other player:
             P0     P1     P2     P3     P4     P5     P6     P7     P8
vs. P0 :      0   -100   -100   -100   -250   -250   -250   -100   -250
vs. P1 :   -100      0   -100   -100   -250   -250   -212   -100   -250
vs. P2 :   -100   -100      0   -100     79    -69     29   -100     -2
vs. P3 :   -100   -100   -100      0      1      0     -2   -100      0
vs. P4 :      3    250    108    142      0    100    137    250    100
vs. P5 :      3    250    172    142    100      0    138    250    100
vs. P6 :      2    161     58     71     12     10      0    161     11
vs. P7 :   -100   -100   -100   -100   -250   -250   -212      0   -250
vs. P8 :      4    250    143    142    100    100    137    250      0
TOTAL  :   -388    511     81     97   -458   -609   -235    511   -541
--------------------------------------------------------------------------------
Section 2 - Leaderboard
--------------------------------------------------------------------------------
Average points per round:
Team name (P#):  Score      with strategy name
CatsdaBest(P1):         56 points with Collude more than Betray                
Fish Frien(P7):         56 points with If our score is greater, betray however 
Hungary   (P3):         10 points with Random chaos                            
Team Sam a(P2):          9 points with Majority Decide                         
team buttk(P6):        -27 points with  alternate strategy                     
Tofu Crack(P0):        -44 points with winning strategy                        
The name t(P4):        -51 points with The name the team gives to this strategy
ace of spa(P8):        -61 points with The name the team gives to this strategy
 BubbleGup(P5):        -68 points with The name the team gives to this strategy
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
team3--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####
import random 
team_name = 'Tofu Cracker' # Only 10 chars displayed.
strategy_name = 'winning strategy'
strategy_description = 'the algorithms wait for the opponent to do a certain pattern and when the opponent does that pattern, our algorith sends out a certain decided response. The other one sends out a certain pattern once the score of either the opponent or you gets to a certain point.'
    
def move(my_history, their_history, my_score, their_score):
    ''' Arguments accepted: my_history, their_history are strings.
    my_score, their_score are ints.
    
    Make my move.
    Returns 'c' or 'b'. 
    '''

    # my_history: a string with one letter (c or b) per round that has been played with this opponent.
    # their_history: a string of the same length as history, possibly empty. 
    # The first round between these two players is my_history[0] and their_history[0].
    # The most recent round is my_history[-1] and their_history[-1].
    
    # Analyze my_history and their_history and/or my_score and their_score.
    # Decide whether to return 'c' or 'b'.
    if their_history == 'bb':
        return 'b'
    if their_score >= 500:
        return 'b'
    if my_score <= 500:
        return 'b'
    if their_history == 'ccb':
        return 'c'
    
def test_move(my_history, their_history, my_score, their_score, result):
    '''calls move(my_history, their_history, my_score, their_score)
    from this module. Prints error if return value != result.
    Returns True or False, dpending on whether result was as expected.
    '''
    real_result = move(my_history, their_history, my_score, their_score)
    if real_result == result:
        return True
    else:
        print("move(" +
            ", ".join(["'"+my_history+"'", "'"+their_history+"'",
                       str(my_score), str(their_score)])+
            ") returned " + "'" + real_result + "'" +
            " and should have returned '" + result + "'")
        return False

if __name__ == '__main__':
     
    # Test 1: Betray on first move.
    if test_move(my_history='',
              their_history='', 
              my_score=0,
              their_score=0,
              result='b'):
         print 'Test passed'
     # Test 2: Continue betraying if they collude despite being betrayed.
    test_move(my_history='bbb',
              their_history='ccc', 
              # Note the scores are for testing move().
              # The history and scores don't need to match unless
              # that is relevant to the test of move(). Here,
              # the simulation (if working correctly) would have awarded 
              # 300 to me and -750 to them. This test will pass if and only if
              # move('bbb', 'ccc', 0, 0) returns 'b'.
              my_score=0, 
              their_score=0,
              result='b')             --------------------------------------------------------------------------------
team4--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'CatsdaBest' # Only 10 chars displayed.

strategy_name = 'Collude more than Betray'
strategy_description = 'Collude 70% of the time and betray 30% of the time, only after the other person betrays'

import random
 
def move(my_history, their_history, my_score, their_score):
    ''' Arguments accepted: my_history, their_history are strings.
    my_score, their_score are ints.

    
    Make my move.
    Returns 'c' or 'b'. 
    '''

    if 'b' in their_history:
        return 'b'
    else:
        if random.random():
            return 'b'
        else:
            return 'c'
            
    
--------------------------------------------------------------------------------
team5--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

#test 1.0

team_name = 'Team Sam and Josiah' # Only 10 chars displayed.
strategy_name = 'Majority Decide'
strategy_description = 'Colludes or Betrays depending on what opponent has done more'
    
def move(my_history, their_history, my_score, their_score):
    ''' Arguments accepted: my_history, their_history are strings.
    my_score, their_score are ints.
    
    Make my move.
    Returns 'c' or 'b'. 
    '''

    # my_history: a string with one letter (c or b) per round that has been played with this opponent.
    # their_history: a string of the same length as history, possibly empty. 
    # The first round between these two players is my_history[0] and their_history[0].
    # The most recent round is my_history[-1] and their_history[-1].
    
    # Analyze my_history and their_history and/or my_score and their_score.
    # Decide whether to return 'c' or 'b'.

#    numC=0
#    numB=0
#    if my_history and their_history == '':
#        return 'c'
#    else:
#        for i in range(0,len(their_history)):
#            if their_history[i] == 'c':
#                numC+=1
#            if their_history[i] == 'b':
#                numB+=1
#       if numC >= numB:
#            return 'c'
#        else:
#            return 'b'
    if my_history == '':
        return 'b'
#    elif len(their_history)>=50:   
#         return 'b'
    elif len(their_history)<=95:
        return their_history[-1]
    else:
        return'b'
    
def test_move(my_history, their_history, my_score, their_score, result):
    '''calls move(my_history, their_history, my_score, their_score)
    from this module. Prints error if return value != result.
    Returns True or False, dpending on whether result was as expected.
    '''
    real_result = move(my_history, their_history, my_score, their_score)
    if real_result == result:
        return True
    else:
        print("move(" +
            ", ".join(["'"+my_history+"'", "'"+their_history+"'",
                       str(my_score), str(their_score)])+
            ") returned " + "'" + real_result + "'" +
            " and should have returned '" + result + "'")
        return False

if __name__ == '__main__':
     
    # Test 1: Betray on first move.
    if test_move(my_history='',
              their_history='', 
              my_score=0,
              their_score=0,
              result='b'):
         print 'Test passed'
     # Test 2: Continue betraying if they collude despite being betrayed.
    test_move(my_history='bbb',
              their_history='ccc', 
              # Note the scores are for testing move().
              # The history and scores don't need to match unless
              # that is relevant to the test of move(). Here,
              # the simulation (if working correctly) would have awarded 
              # 300 to me and -750 to them. This test will pass if and only if
              # move('bbb', 'ccc', 0, 0) returns 'b'.
              my_score=0, 
              their_score=0,
              result='b')             
--------------------------------------------------------------------------------
team6--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####
import random
team_name = 'Hungary' # Only 10 chars displayed.
strategy_name = 'Random chaos'
strategy_description = 'Weighs the options, then picks something randomly'

  
def move(my_history, their_history, my_score, their_score):
    ''' Arguments accepted: my_history, their_history are strings.
    my_score, their_score are ints.
    
    Make my move.
    Returns 'c' or 'b'. 
    '''

    # my_history: a string with one letter (c or b) per round that has been played with this opponent.
    # their_history: a string of the same length as history, possibly empty. 
    # The first round between these two players is my_history[0] and their_history[0].
    # The most recent round is my_history[-1] and their_history[-1].
    
    # Analyze my_history and their_history and/or my_score and their_score.
    # Decide whether to return 'c' or 'b'.
    choice = 'b'
    if my_score < 100:
        return 'b'
    elif my_score > 200 and their_score < 100:
        return 'c'
    elif their_history[-3:] is 'bbb':
        choice = random.choice['b','c','b','c','b','c','b']
        return choice
    else:
        return 'b'

    
def test_move(my_history, their_history, my_score, their_score, result):
    '''calls move(my_history, their_history, my_score, their_score)
    from this module. Prints error if return value != result.
    Returns True or False, dpending on whether result was as expected.
    '''
    real_result = move(my_history, their_history, my_score, their_score)
    if real_result == result:
        return True
    else:
        print("move)(" +
            ", ".join(["'"+my_history+"'", "'"+their_history+"'",
                       str(my_score), str(their_score)])+
            ") returned " + "'" + real_result + "'" +
            " and should have returned '" + result + "'")
        return False

if __name__ == '__main__':
     
    # Test 1: Betray on first move.
    if test_move(my_history='',
              their_history='', 
              my_score=0,
              their_score=0,
              result='b'):
            print ('Test passed')
     # Test 2: Continue betraying if they collude despite being betrayed.
    test_move(my_history='bbb',
              their_history='ccc', 
              # Note the scores are for testing move().
              # The history and scores don't need to match unless
              # that is relevant to the test of move(). Here,
              # the simulation (if working correctly) would have awarded 
              # 300 to me and -750 to them. This test will pass if and only if
              # move('bbb', 'ccc', 0, 0) returns 'b'.
              my_score=0, 
              their_score=0,
              result='b')             --------------------------------------------------------------------------------
team7--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'The name the team gives to itself' # Only 10 chars displayed.
strategy_name = 'The name the team gives to this strategy'
strategy_description = 'How does this strategy decide?'
    
def move(my_history, their_history, my_score, their_score):
    ''' Arguments accepted: my_history, their_history are strings.
    my_score, their_score are ints.
    
    Make my move.
    Returns 'c' or 'b'. 
    '''

    # my_history: a string with one letter (c or b) per round that has been played with this opponent.
    # their_history: a string of the same length as history, possibly empty. 
    # The first round between these two players is my_history[0] and their_history[0].
    # The most recent round is my_history[-1] and their_history[-1].
    
    # Analyze my_history and their_history and/or my_score and their_score.
    # Decide whether to return 'c' or 'b'.
    
    return 'c'

    
def test_move(my_history, their_history, my_score, their_score, result):
    '''calls move(my_history, their_history, my_score, their_score)
    from this module. Prints error if return value != result.
    Returns True or False, dpending on whether result was as expected.
    '''
    real_result = move(my_history, their_history, my_score, their_score)
    if real_result == result:
        return True
    else:
        print("move(" +
            ", ".join(["'"+my_history+"'", "'"+their_history+"'",
                       str(my_score), str(their_score)])+
            ") returned " + "'" + real_result + "'" +
            " and should have returned '" + result + "'")
        return False

if __name__ == '__main__':
     
    # Test 1: Betray on first move.
    if test_move(my_history='',
              their_history='', 
              my_score=0,
              their_score=0,
              result='b'):
         print 'Test passed'
     # Test 2: Continue betraying if they collude despite being betrayed.
    test_move(my_history='bbb',
              their_history='ccc', 
              # Note the scores are for testing move().
              # The history and scores don't need to match unless
              # that is relevant to the test of move(). Here,
              # the simulation (if working correctly) would have awarded 
              # 300 to me and -750 to them. This test will pass if and only if
              # move('bbb', 'ccc', 0, 0) returns 'b'.
              my_score=0, 
              their_score=0,
              result='b')             --------------------------------------------------------------------------------
team8--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = ' BubbleGuppies' # Only 10 chars displayed.
strategy_name = 'The name the team gives to this strategy'
strategy_description = 'How does this strategy decide?'
    
def move(my_history, their_history, my_score, their_score):
    ''' Arguments accepted: my_history, their_history are strings.
    my_score, their_score are ints.
    
    Make my move.
    Returns 'c' or 'b'. 
    '''

    # my_history: a string with one letter (c or b) per round that has been played with this opponent.
    # their_history: a string of the same length as history, possibly empty. 
    # The first round between these two players is my_history[0] and their_history[0].
    # The most recent round is my_history[-1] and their_history[-1].
    
    # Analyze my_history and their_history and/or my_score and their_score.
    # Decide whether to return 'c' or 'b'.
    
    return 'c'

    
def test_move(my_history, their_history, my_score, their_score, result):
    '''calls move(my_history, their_history, my_score, their_score)
    from this module. Prints error if return value != result.
    Returns True or False, dpending on whether result was as expected.
    '''
    real_result = move(my_history, their_history, my_score, their_score)
    if real_result == result:
        return True
    else:
        print("move(" +
            ", ".join(["'"+my_history+"'", "'"+their_history+"'",
                       str(my_score), str(their_score)])+
            ") returned " + "'" + real_result + "'" +
            " and should have returned '" + result + "'")
        return False

if __name__ == '__main__':
     
    # Test 1: Betray on first move.
    if test_move(my_history='',
              their_history='', 
              my_score=0,
              their_score=0,
              result='b'):
         print 'Test passed'
     # Test 2: Continue betraying if they collude despite being betrayed.
    test_move(my_history='bbb',
              their_history='ccc', 
              # Note the scores are for testing move().
              # The history and scores don't need to match unless
              # that is relevant to the test of move(). Here,
              # the simulation (if working correctly) would have awarded 
              # 300 to me and -750 to them. This test will pass if and only if
              # move('bbb', 'ccc', 0, 0) returns 'b'.
              my_score=0, 
              their_score=0,
              result='b')             --------------------------------------------------------------------------------
team9--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'team buttkicker' # Only 10 chars displayed.
strategy_name = ' alternate strategy'
strategy_description = 'the c and b will alternate based off of the history.'
    
def move(my_history, their_history, my_score, their_score):
    ''' Arguments accepted: my_history, their_history are strings.
    my_score, their_score are ints.
    
    Make my move.
    Returns 'c' or 'b'. 
    '''

    # my_history: a string with one letter (c or b) per round that has been played with this opponent.
    # their_history: a string of the same length as history, possibly empty. 
    # The first round between these two players is my_history[0] and their_history[0].
    # The most recent round is my_history[-1] and their_history[-1].
    
    # Analyze my_history and their_history and/or my_score and their_score.
    # Decide whether to return 'c' or 'b'.

    
    if len(my_history) % 4 == 0:
	return 'b'
    else:
        return 'c'
        
def test_move(my_history, their_history, my_score, their_score, result):
    '''calls move(my_history, their_history, my_score, their_score)
    from this module. Prints error if return value != result.
    Returns True or False, dpending on whether result was as expected.
    '''
    real_result = move(my_history, their_history, my_score, their_score)
    if real_result == result:
        return True
    else:
        print("move(" +
            ", ".join(["'"+my_history+"'", "'"+their_history+"'",
                       str(my_score), str(their_score)])+
            ") returned " + "'" + real_result + "'" +
            " and should have returned '" + result + "'")
        return False

if __name__ == '__main__':
     
    # Test 1: Betray on first move.
    if test_move(my_history='',
              their_history='', 
              my_score=0,
              their_score=0,
              result='b'):
         print 'Test passed'
     # Test 2: Continue betraying if they collude despite being betrayed.
    test_move(my_history='bbb',
              their_history='ccc', 
              # Note the scores are for testing move().
              # The history and scores don't need to match unless
              # that is relevant to the test of move(). Here,
              # the simulation (if working correctly) would have awarded 
              # 300 to me and -750 to them. This test will pass if and only if
              # move('bbb', 'ccc', 0, 0) returns 'b'.
              my_score=0, 
              their_score=0,
              result='b')             --------------------------------------------------------------------------------
team10--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'Fish Friends' # Only 10 chars displayed
strategy_name = 'If our score is greater, betray however if their history is ccc return c'
strategy_description = 'How does this strategy decide?'
    
def move(my_history, their_history, my_score, their_score):
    ''' Arguments accepted: my_history, their_history are strings.
    my_score, their_score are ints.
    
    Make my move.
    Returns 'c' or 'b'. 
    '''

    # my_history: a string with one letter (c or b) per round that has been played with this opponent.
    # their_history: a string of the same length as history, possibly empty. 
    # The first round between these two players is my_history[0] and their_history[0].
    # The most recent round is my_history[-1] and their_history[-1].
    
    # Analyze my_history and their_history and/or my_score and their_score.
    # Decide whether to return 'c' or 'b'.
    
    if my_score > their_score:
        return 'b'
    if their_history[-10:] is 'ccc':
        return 'c'
    else:
        return 'b'

def test_move(my_history, their_history, my_score, their_score, result):
    '''calls move(my_history, their_history, my_score, their_score)
    from this module. Prints error if return value != result.
    Returns True or False, dpending on whether result was as expected.
    '''
    real_result = move(my_history, their_history, my_score, their_score)
    if real_result == result:
        return True
    else:
        print("move(" +
            ", ".join(["'"+my_history+"'", "'"+their_history+"'",
                       str(my_score), str(their_score)])+
            ") returned " + "'" + real_result + "'" +
            " and should have returned '" + result + "'")
        return False

if __name__ == '__main__':
     
    # Test 1: Betray on first move.
    if test_move(my_history='',
              their_history='', 
              my_score=0,
              their_score=0,
              result='b'):
         print 'Test passed'
     # Test 2: Continue betraying if they collude despite being betrayed.
    test_move(my_history='bbb',
              their_history='ccc', 
              # Note the scores are for testing move().
              # The history and scores don't need to match unless
              # that is relevant to the test of move(). Here,
              # the simulation (if working correctly) would have awarded 
              # 300 to me and -750 to them. This test will pass if and only if
              # move('bbb', 'ccc', 0, 0) returns 'b'.
              my_score=0, 
              their_score=0,
              result='b')             --------------------------------------------------------------------------------
team11--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'ace of spades' # Only 10 chars displayed.
strategy_name = 'The name the team gives to this strategy'
strategy_description = 'How does this strategy decide?'
    
def move(my_history, their_history, my_score, their_score):
    ''' Arguments accepted: my_history, their_history are strings.
    my_score, their_score are ints.
    
    Make my move.
    Returns 'c' or 'b'. 
    '''

    # my_history: a string with one letter (c or b) per round that has been played with this opponent.
    # their_history: a string of the same length as history, possibly empty. 
    # The first round between these two players is my_history[0] and their_history[0].
    # The most recent round is my_history[-1] and their_history[-1].
    
    # Analyze my_history and their_history and/or my_score and their_score.
    # Decide whether to return 'c' or 'b'.
    
    return 'c'

    
def test_move(my_history, their_history, my_score, their_score, result):
    '''calls move(my_history, their_history, my_score, their_score)
    from this module. Prints error if return value != result.
    Returns True or False, dpending on whether result was as expected.
    '''
    real_result = move(my_history, their_history, my_score, their_score)
    if real_result == result:
        return True
    else:
        print("move(" +
            ", ".join(["'"+my_history+"'", "'"+their_history+"'",
                       str(my_score), str(their_score)])+
            ") returned " + "'" + real_result + "'" +
            " and should have returned '" + result + "'")
        return False

if __name__ == '__main__':
     
    # Test 1: Betray on first move.
    if test_move(my_history='',
              their_history='', 
              my_score=0,
              their_score=0,
              result='b'):
         print 'Test passed'
     # Test 2: Continue betraying if they collude despite being betrayed.
    test_move(my_history='bbb',
              their_history='ccc', 
              # Note the scores are for testing move().
              # The history and scores don't need to match unless
              # that is relevant to the test of move(). Here,
              # the simulation (if working correctly) would have awarded 
              # 300 to me and -750 to them. This test will pass if and only if
              # move('bbb', 'ccc', 0, 0) returns 'b'.
              my_score=0, 
              their_score=0,
              result='b')             --------------------------------------------------------------------------------
Section 3 - Game Data for Team Tofu Cracker
--------------------------------------------------------------------------------
-100 pt/round: Tofu Cracker(P0) "winning strategy"
-100 pt/round: CatsdaBest(P1) "Collude more than Betray"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
-100 pt/round: Tofu Cracker(P0) "winning strategy"
-100 pt/round: Team Sam and Josiah(P2) "Majority Decide"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
-100 pt/round: Tofu Cracker(P0) "winning strategy"
-100 pt/round: Hungary(P3) "Random chaos"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
3 pt/round: Tofu Cracker(P0) "winning strategy"
-250 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
BBB B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B 
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

B B B B B B B B B B B B B B B B B B B B B B B B B B 
cccccccccccccccccccccccccccccccccccccccccccccccccccc

--------------------------------------------------------------------------------
3 pt/round: Tofu Cracker(P0) "winning strategy"
-250 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
BBB B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B 
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B 
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

B B B B B B B B B B B B B B B B B B B B
ccccccccccccccccccccccccccccccccccccccc

--------------------------------------------------------------------------------
2 pt/round: Tofu Cracker(P0) "winning strategy"
-250 pt/round: team buttkicker(P6) " alternate strategy"
bBBB B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B
bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbccc

 B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B
bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbccc

--------------------------------------------------------------------------------
-100 pt/round: Tofu Cracker(P0) "winning strategy"
-100 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
4 pt/round: Tofu Cracker(P0) "winning strategy"
-250 pt/round: ace of spades(P8) "The name the team gives to this strategy"
BBB B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B 
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

B B B B B B B B B B B 
cccccccccccccccccccccc

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team CatsdaBest
--------------------------------------------------------------------------------
-100 pt/round: CatsdaBest(P1) "Collude more than Betray"
-100 pt/round: Tofu Cracker(P0) "winning strategy"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
-100 pt/round: CatsdaBest(P1) "Collude more than Betray"
-100 pt/round: Team Sam and Josiah(P2) "Majority Decide"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
-100 pt/round: CatsdaBest(P1) "Collude more than Betray"
-100 pt/round: Hungary(P3) "Random chaos"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbb
bbbbbbbb

--------------------------------------------------------------------------------
250 pt/round: CatsdaBest(P1) "Collude more than Betray"
-250 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------------------------------------------------------------------------------
250 pt/round: CatsdaBest(P1) "Collude more than Betray"
-250 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------------------------------------------------------------------------------
161 pt/round: CatsdaBest(P1) "Collude more than Betray"
-212 pt/round: team buttkicker(P6) " alternate strategy"
bBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBB
bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbccc

bBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBB
bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbccc

bBBBbBBBbBBBbBBBbBBBbBBBb
bcccbcccbcccbcccbcccbcccb

--------------------------------------------------------------------------------
-100 pt/round: CatsdaBest(P1) "Collude more than Betray"
-100 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
250 pt/round: CatsdaBest(P1) "Collude more than Betray"
-250 pt/round: ace of spades(P8) "The name the team gives to this strategy"
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

BB
cc

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team Team Sam and Josiah
--------------------------------------------------------------------------------
-100 pt/round: Team Sam and Josiah(P2) "Majority Decide"
-100 pt/round: Tofu Cracker(P0) "winning strategy"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
-100 pt/round: Team Sam and Josiah(P2) "Majority Decide"
-100 pt/round: CatsdaBest(P1) "Collude more than Betray"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
-100 pt/round: Team Sam and Josiah(P2) "Majority Decide"
-100 pt/round: Hungary(P3) "Random chaos"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
108 pt/round: Team Sam and Josiah(P2) "Majority Decide"
79 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
BCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
cCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCBBBBB
CCCCCCCCCCCCCCCCccccc

--------------------------------------------------------------------------------
172 pt/round: Team Sam and Josiah(P2) "Majority Decide"
-69 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
BCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
cCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
CCCCCCCCCCCCCCCCcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

BBBBBBBBBBBBBBBBBBBBBBB
ccccccccccccccccccccccc

--------------------------------------------------------------------------------
58 pt/round: Team Sam and Josiah(P2) "Majority Decide"
29 pt/round: team buttkicker(P6) " alternate strategy"
bBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCC
bcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCC

cBCCcBCCcBCCcBCCbBBBbBB
BcCCBcCCBcCCBcCCbcccbcc

--------------------------------------------------------------------------------
-100 pt/round: Team Sam and Josiah(P2) "Majority Decide"
-100 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
143 pt/round: Team Sam and Josiah(P2) "Majority Decide"
-2 pt/round: ace of spades(P8) "The name the team gives to this strategy"
BCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
cCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
CCCCCCCCCCCCCCCCcccccccccccccccccccccccccccccccccccccc

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team Hungary
--------------------------------------------------------------------------------
-100 pt/round: Hungary(P3) "Random chaos"
-100 pt/round: Tofu Cracker(P0) "winning strategy"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
-100 pt/round: Hungary(P3) "Random chaos"
-100 pt/round: CatsdaBest(P1) "Collude more than Betray"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbb
bbbbbbbb

--------------------------------------------------------------------------------
-100 pt/round: Hungary(P3) "Random chaos"
-100 pt/round: Team Sam and Josiah(P2) "Majority Decide"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
142 pt/round: Hungary(P3) "Random chaos"
1 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
BCCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBC
cCCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcC

CCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCC
CCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCC

--------------------------------------------------------------------------------
142 pt/round: Hungary(P3) "Random chaos"
0 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
BCCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBC
cCCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcC

CCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCB
CCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCc

CCBCCCBCCBCCCBCCBCCCBCCBCCCBCC
CCcCCCcCCcCCCcCCcCCCcCCcCCCcCC

--------------------------------------------------------------------------------
71 pt/round: Hungary(P3) "Random chaos"
-2 pt/round: team buttkicker(P6) " alternate strategy"
bBBCcCCCcBCBcBCCbCBCcBCCbCBCcBCBcBCCcBCBcBCCbCBCcBCCbCBCcBCBcBCCcBCBcBCCbCBCcBCC
bccCBCCCBcCcBcCCbCcCBcCCbCcCBcCcBcCCBcCcBcCCbCcCBcCCbCcCBcCcBcCCBcCcBcCCbCcCBcCC

bCBCcBCBcBCCcBCBcBCCbCBCcBCCbCBCcBCBcBCCcBCBcBCCbCB
bCcCBcCcBcCCBcCcBcCCbCcCBcCCbCcCBcCcBcCCBcCcBcCCbCc

--------------------------------------------------------------------------------
-100 pt/round: Hungary(P3) "Random chaos"
-100 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
142 pt/round: Hungary(P3) "Random chaos"
0 pt/round: ace of spades(P8) "The name the team gives to this strategy"
BCCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBC
cCCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcC

CCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCC
CCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCC

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team The name the team gives to itself
--------------------------------------------------------------------------------
-250 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
3 pt/round: Tofu Cracker(P0) "winning strategy"
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBB B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B 

cccccccccccccccccccccccccccccccccccccccccccccccccccc
B B B B B B B B B B B B B B B B B B B B B B B B B B 

--------------------------------------------------------------------------------
-250 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
250 pt/round: CatsdaBest(P1) "Collude more than Betray"
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

--------------------------------------------------------------------------------
79 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
108 pt/round: Team Sam and Josiah(P2) "Majority Decide"
cCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
BCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCccccc
CCCCCCCCCCCCCCCCBBBBB

--------------------------------------------------------------------------------
1 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
142 pt/round: Hungary(P3) "Random chaos"
cCCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcC
BCCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBC

CCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCC
CCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCC

--------------------------------------------------------------------------------
100 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
100 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

--------------------------------------------------------------------------------
12 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
137 pt/round: team buttkicker(P6) " alternate strategy"
cCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCC
BCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCC

cCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCC
BCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCC

--------------------------------------------------------------------------------
-250 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
250 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

cccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

--------------------------------------------------------------------------------
100 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
100 pt/round: ace of spades(P8) "The name the team gives to this strategy"
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team  BubbleGuppies
--------------------------------------------------------------------------------
-250 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
3 pt/round: Tofu Cracker(P0) "winning strategy"
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBB B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B 

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B 

ccccccccccccccccccccccccccccccccccccccc
B B B B B B B B B B B B B B B B B B B B

--------------------------------------------------------------------------------
-250 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
250 pt/round: CatsdaBest(P1) "Collude more than Betray"
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

--------------------------------------------------------------------------------
-69 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
172 pt/round: Team Sam and Josiah(P2) "Majority Decide"
cCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
BCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
CCCCCCCCCCCCCCCCBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

ccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBB

--------------------------------------------------------------------------------
0 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
142 pt/round: Hungary(P3) "Random chaos"
cCCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcC
BCCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBC

CCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCc
CCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCB

CCcCCCcCCcCCCcCCcCCCcCCcCCCcCC
CCBCCCBCCBCCCBCCBCCCBCCBCCCBCC

--------------------------------------------------------------------------------
100 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
100 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

--------------------------------------------------------------------------------
10 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
138 pt/round: team buttkicker(P6) " alternate strategy"
cCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCC
BCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCC

cCCCcCCCcCCCcCCCcCCCcCCCcCCCc
BCCCBCCCBCCCBCCCBCCCBCCCBCCCB

--------------------------------------------------------------------------------
-250 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
250 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

cccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

--------------------------------------------------------------------------------
100 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
100 pt/round: ace of spades(P8) "The name the team gives to this strategy"
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team team buttkicker
--------------------------------------------------------------------------------
-250 pt/round: team buttkicker(P6) " alternate strategy"
2 pt/round: Tofu Cracker(P0) "winning strategy"
bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbccc
bBBB B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B

bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbccc
 B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B

--------------------------------------------------------------------------------
-212 pt/round: team buttkicker(P6) " alternate strategy"
161 pt/round: CatsdaBest(P1) "Collude more than Betray"
bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbccc
bBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBB

bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbccc
bBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBB

bcccbcccbcccbcccbcccbcccb
bBBBbBBBbBBBbBBBbBBBbBBBb

--------------------------------------------------------------------------------
29 pt/round: team buttkicker(P6) " alternate strategy"
58 pt/round: Team Sam and Josiah(P2) "Majority Decide"
bcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCCBcCC
bBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCCcBCC

BcCCBcCCBcCCBcCCbcccbcc
cBCCcBCCcBCCcBCCbBBBbBB

--------------------------------------------------------------------------------
-2 pt/round: team buttkicker(P6) " alternate strategy"
71 pt/round: Hungary(P3) "Random chaos"
bccCBCCCBcCcBcCCbCcCBcCCbCcCBcCcBcCCBcCcBcCCbCcCBcCCbCcCBcCcBcCCBcCcBcCCbCcCBcCC
bBBCcCCCcBCBcBCCbCBCcBCCbCBCcBCBcBCCcBCBcBCCbCBCcBCCbCBCcBCBcBCCcBCBcBCCbCBCcBCC

bCcCBcCcBcCCBcCcBcCCbCcCBcCCbCcCBcCcBcCCBcCcBcCCbCc
bCBCcBCBcBCCcBCBcBCCbCBCcBCCbCBCcBCBcBCCcBCBcBCCbCB

--------------------------------------------------------------------------------
137 pt/round: team buttkicker(P6) " alternate strategy"
12 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
BCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCC
cCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCC

BCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCC
cCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCC

--------------------------------------------------------------------------------
138 pt/round: team buttkicker(P6) " alternate strategy"
10 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
BCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCC
cCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCC

BCCCBCCCBCCCBCCCBCCCBCCCBCCCB
cCCCcCCCcCCCcCCCcCCCcCCCcCCCc

--------------------------------------------------------------------------------
-212 pt/round: team buttkicker(P6) " alternate strategy"
161 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbccc
bBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBB

bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbc
bBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbB

--------------------------------------------------------------------------------
137 pt/round: team buttkicker(P6) " alternate strategy"
11 pt/round: ace of spades(P8) "The name the team gives to this strategy"
BCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCC
cCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCC

BCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCC
cCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCC

BCCCBCCCBC
cCCCcCCCcC

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team Fish Friends
--------------------------------------------------------------------------------
-100 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
-100 pt/round: Tofu Cracker(P0) "winning strategy"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
-100 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
-100 pt/round: CatsdaBest(P1) "Collude more than Betray"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
-100 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
-100 pt/round: Team Sam and Josiah(P2) "Majority Decide"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
-100 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
-100 pt/round: Hungary(P3) "Random chaos"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
250 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
-250 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccc

--------------------------------------------------------------------------------
250 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
-250 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccc

--------------------------------------------------------------------------------
161 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
-212 pt/round: team buttkicker(P6) " alternate strategy"
bBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBB
bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbccc

bBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbBBBbB
bcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbcccbc

--------------------------------------------------------------------------------
250 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
-250 pt/round: ace of spades(P8) "The name the team gives to this strategy"
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team ace of spades
--------------------------------------------------------------------------------
-250 pt/round: ace of spades(P8) "The name the team gives to this strategy"
4 pt/round: Tofu Cracker(P0) "winning strategy"
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBB B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B 

cccccccccccccccccccccc
B B B B B B B B B B B 

--------------------------------------------------------------------------------
-250 pt/round: ace of spades(P8) "The name the team gives to this strategy"
250 pt/round: CatsdaBest(P1) "Collude more than Betray"
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

cc
BB

--------------------------------------------------------------------------------
-2 pt/round: ace of spades(P8) "The name the team gives to this strategy"
143 pt/round: Team Sam and Josiah(P2) "Majority Decide"
cCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
BCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCcccccccccccccccccccccccccccccccccccccc
CCCCCCCCCCCCCCCCBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

--------------------------------------------------------------------------------
0 pt/round: ace of spades(P8) "The name the team gives to this strategy"
142 pt/round: Hungary(P3) "Random chaos"
cCCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcC
BCCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBC

CCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCCcCCCcCC
CCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCCBCCCBCC

--------------------------------------------------------------------------------
100 pt/round: ace of spades(P8) "The name the team gives to this strategy"
100 pt/round: The name the team gives to itself(P4) "The name the team gives to this strategy"
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

--------------------------------------------------------------------------------
100 pt/round: ace of spades(P8) "The name the team gives to this strategy"
100 pt/round:  BubbleGuppies(P5) "The name the team gives to this strategy"
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

--------------------------------------------------------------------------------
11 pt/round: ace of spades(P8) "The name the team gives to this strategy"
137 pt/round: team buttkicker(P6) " alternate strategy"
cCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCC
BCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCC

cCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCCcCCC
BCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCCBCCC

cCCCcCCCcC
BCCCBCCCBC

--------------------------------------------------------------------------------
-250 pt/round: ace of spades(P8) "The name the team gives to this strategy"
250 pt/round: Fish Friends(P7) "If our score is greater, betray however if their history is ccc return c"
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

--------------------------------------------------------------------------------
